"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[571],{6293:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>a,contentTitle:()=>r,default:()=>g,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(4848),s=n(8453);const i={},r="Type Alias: ConfigLogTransport",l={id:"api/logging/logging/type-aliases/ConfigLogTransport",title:"Type Alias: ConfigLogTransport",description:"ConfigLogTransport: object",source:"@site/docs/api/logging/logging/type-aliases/ConfigLogTransport.md",sourceDirName:"api/logging/logging/type-aliases",slug:"/api/logging/logging/type-aliases/ConfigLogTransport",permalink:"/docs/api/logging/logging/type-aliases/ConfigLogTransport",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api/logging/logging/type-aliases/ConfigLogTransport.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Function: addRotateFileLogTransport()",permalink:"/docs/api/logging/logging/functions/addRotateFileLogTransport"},next:{title:"Variable: log",permalink:"/docs/api/logging/logging/variables/log"}},a={},c=[{value:"Type declaration",id:"type-declaration",level:2},{value:"done?",id:"done",level:3},{value:"options?",id:"options",level:3},{value:"type",id:"type",level:3}];function d(e){const o={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.h1,{id:"type-alias-configlogtransport",children:"Type Alias: ConfigLogTransport"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"ConfigLogTransport"}),": ",(0,t.jsx)(o.code,{children:"object"})]}),"\n"]}),"\n",(0,t.jsx)(o.h2,{id:"type-declaration",children:"Type declaration"}),"\n",(0,t.jsx)(o.h3,{id:"done",children:"done?"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"readonly"})," ",(0,t.jsx)(o.code,{children:"optional"})," ",(0,t.jsx)(o.strong,{children:"done"}),": ",(0,t.jsx)(o.code,{children:"boolean"})]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"If the transport has already been added to the logger. The logging set up command handles this for you."}),"\n",(0,t.jsx)(o.h3,{id:"options",children:"options?"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.code,{children:"optional"})," ",(0,t.jsx)(o.strong,{children:"options"}),": ",(0,t.jsx)(o.code,{children:"any"})]}),"\n"]}),"\n",(0,t.jsx)(o.p,{children:"The options for the transport. Generally only required for syslog but you can use this to override default options for other types of transports."}),"\n",(0,t.jsx)(o.h3,{id:"type",children:"type"}),"\n",(0,t.jsxs)(o.blockquote,{children:["\n",(0,t.jsxs)(o.p,{children:[(0,t.jsx)(o.strong,{children:"type"}),": ",(0,t.jsx)(o.code,{children:'"syslog"'})," | ",(0,t.jsx)(o.code,{children:'"console"'})," | ",(0,t.jsx)(o.code,{children:'"file"'})," | ",(0,t.jsx)(o.code,{children:'"ev"'})]}),"\n"]}),"\n",(0,t.jsxs)(o.p,{children:["The type of winston transport. At the moment only ",(0,t.jsx)(o.code,{children:"file"}),", ",(0,t.jsx)(o.code,{children:"console"}),", ",(0,t.jsx)(o.code,{children:"ev"})," and ",(0,t.jsx)(o.code,{children:"syslog"})," are supported."]})]})}function g(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>l});var t=n(6540);const s={},i=t.createContext(s);function r(e){const o=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(i.Provider,{value:o},e.children)}}}]);