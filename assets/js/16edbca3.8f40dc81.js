"use strict";(self.webpackChunkdocs_v_3=self.webpackChunkdocs_v_3||[]).push([[4771],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>u});var a=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,s=function(e,t){if(null==e)return{};var r,a,s={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var p=a.createContext({}),l=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,s=e.mdxType,n=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=l(r),u=s,g=m["".concat(p,".").concat(u)]||m[u]||d[u]||n;return r?a.createElement(g,o(o({ref:t},c),{},{components:r})):a.createElement(g,o({ref:t},c))}));function u(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var n=r.length,o=new Array(n);o[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:s,o[1]=i;for(var l=2;l<n;l++)o[l]=r[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7278:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>i,toc:()=>l});var a=r(7462),s=(r(7294),r(3905));const n={id:"structures_preProcessors.MessagePreProcessor",title:"Type alias: MessagePreProcessor",sidebar_label:"MessagePreProcessor",custom_edit_url:null},o=void 0,i={unversionedId:"api/types/structures_preProcessors.MessagePreProcessor",id:"api/types/structures_preProcessors.MessagePreProcessor",title:"Type alias: MessagePreProcessor",description:"structures/preProcessors.MessagePreProcessor",source:"@site/docs/api/types/structures_preProcessors.MessagePreProcessor.md",sourceDirName:"api/types",slug:"/api/types/structures_preProcessors.MessagePreProcessor",permalink:"/docs/api/types/structures_preProcessors.MessagePreProcessor",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"structures_preProcessors.MessagePreProcessor",title:"Type alias: MessagePreProcessor",sidebar_label:"MessagePreProcessor",custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"MPConfigType",permalink:"/docs/api/types/structures_preProcessors.MPConfigType"},next:{title:"useragent",permalink:"/docs/api/variables/api_Client.useragent"}},p={},l=[{value:"Type declaration",id:"type-declaration",level:4},{value:"Parameters",id:"parameters",level:5},{value:"Returns",id:"returns",level:5}],c={toc:l};function d(e){let{components:t,...r}=e;return(0,s.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"/docs/api/modules/structures_preProcessors"},"structures/preProcessors"),".MessagePreProcessor"),(0,s.kt)("p",null,"\u01ac ",(0,s.kt)("strong",{parentName:"p"},"MessagePreProcessor"),": (",(0,s.kt)("inlineCode",{parentName:"p"},"message"),": ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/interfaces/api_model_message.Message"},(0,s.kt)("inlineCode",{parentName:"a"},"Message")),", ",(0,s.kt)("inlineCode",{parentName:"p"},"client?"),": ",(0,s.kt)("a",{parentName:"p",href:"/docs/api/classes/api_Client.Client"},(0,s.kt)("inlineCode",{parentName:"a"},"Client")),", ",(0,s.kt)("inlineCode",{parentName:"p"},"alreadyProcessed?"),": ",(0,s.kt)("inlineCode",{parentName:"p"},"boolean"),") => ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/api/interfaces/api_model_message.Message"},(0,s.kt)("inlineCode",{parentName:"a"},"Message")),">"),(0,s.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,s.kt)("p",null,"\u25b8 (",(0,s.kt)("inlineCode",{parentName:"p"},"message"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"client?"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"alreadyProcessed?"),"): ",(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/api/interfaces/api_model_message.Message"},(0,s.kt)("inlineCode",{parentName:"a"},"Message")),">"),(0,s.kt)("p",null,"A function that takes a message and returns a message."),(0,s.kt)("h5",{id:"parameters"},"Parameters"),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"message")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("a",{parentName:"td",href:"/docs/api/interfaces/api_model_message.Message"},(0,s.kt)("inlineCode",{parentName:"a"},"Message"))),(0,s.kt)("td",{parentName:"tr",align:"left"},"The message to be processed")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"client?")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("a",{parentName:"td",href:"/docs/api/classes/api_Client.Client"},(0,s.kt)("inlineCode",{parentName:"a"},"Client"))),(0,s.kt)("td",{parentName:"tr",align:"left"},"The client that received the message")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"alreadyProcessed?")),(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"boolean")),(0,s.kt)("td",{parentName:"tr",align:"left"},"Whether the message has already been processed by another preprocessor. (This is useful in cases where you want to mutate the message for both onMessage and onAnyMessage events but only want to do the actual process, like uploading to s3, once.)")))),(0,s.kt)("h5",{id:"returns"},"Returns"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"Promise"),"<",(0,s.kt)("a",{parentName:"p",href:"/docs/api/interfaces/api_model_message.Message"},(0,s.kt)("inlineCode",{parentName:"a"},"Message")),">"))}d.isMDXComponent=!0}}]);