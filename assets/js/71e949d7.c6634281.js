"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1623],{830:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>v,frontMatter:()=>o,metadata:()=>c,toc:()=>i});var t=s(4848),r=s(8453);const o={},a="Variable: ev",c={id:"reference/controllers/events/variables/ev",title:"Variable: ev",description:"const ev: EventEmitter2",source:"@site/docs/reference/controllers/events/variables/ev.md",sourceDirName:"reference/controllers/events/variables",slug:"/reference/controllers/events/variables/ev",permalink:"/docs/reference/controllers/events/variables/ev",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference/controllers/events/variables/ev.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"controllers/events",permalink:"/docs/reference/controllers/events/"},next:{title:"controllers/init\\_patch",permalink:"/docs/reference/controllers/init_patch/"}},l={},i=[];function d(e){const n={blockquote:"blockquote",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"variable-ev",children:"Variable: ev"})}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"const"})," ",(0,t.jsx)(n.strong,{children:"ev"}),": ",(0,t.jsx)(n.code,{children:"EventEmitter2"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This is the library's event emitter. Use this to listen to internal events of the library like so:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('event', callback)\n"})}),"\n",(0,t.jsx)(n.p,{children:"The event you want to listen to is in the format of [namespace].[sessionId]"}),"\n",(0,t.jsx)(n.p,{children:"The event can include wildcards."}),"\n",(0,t.jsxs)(n.p,{children:["For example, to listen to all qr code events, the event will be ",(0,t.jsx)(n.code,{children:"qr.**"}),". e.g:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('qr.**',...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Listen to all sessionData events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('sessionData.**',...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Listen to all events from session1"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('**.session1',...\n"})}),"\n",(0,t.jsx)(n.p,{children:"Listen to all events"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('**.**',...\n"})}),"\n",(0,t.jsx)(n.p,{children:"ev always emits data, sessionId and the namespace which is helpful to know if there are multiple sessions or you're listening to events from all namespaces"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"ev.on('**.**', (data, sessionId, namespace) => {\n\n console.log(`${namespace} event detected for session ${sessionId}`, data)\n\n});\n"})})]})}function v(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(6540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);